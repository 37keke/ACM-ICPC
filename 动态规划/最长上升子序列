// 求的一长串数字的最长上升/下降子序列
// 实质： 用一个数组来记录当前位置的前面有多少个比这个位置的数字还要大/小的数字，最后遍历一遍dp数组即可
// 复杂度： O（1/2 N^2）
#include<iostream>
#include<cstdio>
#include<bits/stdc++.h>
 int dp[31400] , arr[314000] ;
using namespace std ;

int main(){

 int  n ;
 while(cin >> n){
    for(int i = 0 ; i < n ; i++){
        scanf("%d",&arr[i]) ;
        dp[i] = 1 ;
    }
    int ans = 0 ;
    for(int i = 0 ; i < n ; i++){
        for(int j = 0 ; j < i ; j++){
            if(arr[i] > arr[j]) dp[i] = max(dp[i] , dp[j] + 1) ;
        }
        ans = max(ans , dp[i]) ;
    }
    for(int i = 0 ; i < n ; i++){
        ans = max(ans , dp[i]) ;
    }
    printf("%d\n",ans) ;
 }


  return 0 ;
 }
